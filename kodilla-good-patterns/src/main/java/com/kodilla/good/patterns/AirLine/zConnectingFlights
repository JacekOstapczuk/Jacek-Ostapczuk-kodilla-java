package com.kodilla.good.patterns.AirLine;

import java.util.List;
import java.util.stream.Collectors;


public class ConnectingFlights {



    public void connectingFlights(String startingairport, String destinationairport) {
        FlightList flightList = new FlightList();

        List<Flight> ListOfStartingAirport = flightList.flightSet().stream()
                .filter(sf -> sf.getDepartureAirport().equals(startingairport))
                .collect(Collectors.toList());

        List<Flight> ListOfDestinationAirport = flightList.flightSet().stream()
                .filter(df -> df.getArrivalAirport().equals(destinationairport))
                .collect(Collectors.toList());


        for (Flight startingFlight : ListOfStartingAirport) {

            ListOfDestinationAirport.stream()
                    .filter(f -> f.getDepartureAirport().equals(startingFlight.arrivalAirport))
                    .forEach(a -> System.out.println("Lot przesiadkowy dla relacji "  + "z " + startingairport + " do " + destinationairport  +
                            "\n" + "jest możliwy poprzez wykonanie poniższych lotów :" +
                            "\n" + "lot początkowy: " + startingFlight +
                            "\n" + "lot końcowy: "        + a));
        }
    }
}